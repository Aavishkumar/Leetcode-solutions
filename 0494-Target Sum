class Solution {
public:
    int findTargetSumWays(vector<int>& nums, int target) {
        int n=nums.size();
        int sum=0;
        int zero=0;
        for(int i=0;i<n;i++) {
            sum+=nums[i];
            if(!nums[i]) zero++;
        }
        sum+=target;
        if(sum<0 || sum%2!=0) return 0;
        if(sum==0) return pow(2,zero);
        else{
            int cnt=0;
            sum/=2;
            int dp[n+1][sum+1];
            for(int i=0;i<=sum;i++) dp[0][i]=0;
            for(int i=0;i<=n;i++) dp[i][0]=1;
            for(int i=1; i<n+1; i++){
                for(int j=0; j<sum+1; j++){
                    if(nums[i-1]<=j){
                        dp[i][j]=dp[i-1][j-nums[i-1]] + dp[i-1][j];
                    }
                    else{
                        dp[i][j]=dp[i-1][j];
                    }
                }
            }
            return dp[n][sum];
            }
        }
};
